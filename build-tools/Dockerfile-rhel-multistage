FROM quay.io/f5networks/rhel8_base_builder:latest as builder

ENV BASE_PATH "$GOPATH/src/github.com/f5devcentral"
RUN mkdir -p "$BASE_PATH"
ENV REPO_NAME f5-ipam-controller
WORKDIR "$BASE_PATH/$REPO_NAME"
ARG RUN_TESTS=0
ARG COVERALLS_TOKEN
ARG BUILD_VERSION
ARG BUILD_INFO
ARG LICENSE


# Copy Source code

COPY ./$REPO_NAME .
COPY ./$REPO_NAME/build-tools/help.md /tmp/
RUN go-md2man -in /tmp/help.md -out /help.1 && rm -f /tmp/help.md && \
    /bin/bash -ex $BASE_PATH/$REPO_NAME/build-tools/rel-build.sh


FROM registry.redhat.io/ubi8/ubi-minimal as final

LABEL name="f5networks/f5-ipam-controller" \
      vendor="F5 Networks" \
      # version - should be passed in via docker build
      url="http://clouddocs.f5.com/products/connectors/f5-ipam-controller/latest/" \
      summary="F5 IPAM Controller" \
      description="IP Management Controller" \
      run='docker run --name ${NAME} ${IMAGE} /app/bin/f5-ipam-controller' \
      io.k8s.description="Manages F5 BIG-IP from Kubernetes" \
      io.k8s.display-name="F5 BIG-IP Controller for Kubernetes" \
      io.openshift.expose-services="" \
      io.openshift.tags="f5,f5networks,bigip,openshift,router"

ENV APPPATH /app

RUN mkdir -p "$APPPATH/bin" \
 && chmod -R 755 "$APPPATH"

WORKDIR $APPPATH
ARG BUILD_INFO
ARG VERSION_INFO

COPY --from=builder "/help.1" /

RUN microdnf --enablerepo=ubi-8-baseos \
      install --nodocs shadow-utils \
      python36 && \
    microdnf update && \
    microdnf --enablerepo=ubi-8-baseos --enablerepo=ubi-8-appstream update nss-tools nss-softokn nss-util && \
    adduser ctlr && \
    microdnf remove shadow-utils && \
    microdnf clean all \
    && echo "{\"version\": \"${VERSION_INFO}\", \"build\": \"${BUILD_INFO}\"}" \
          > $APPPATH/VERSION_BUILD.json

COPY --from=builder "/go/out/bin/f5-ipam-controller" $APPPATH/bin

USER ctlr

# Run the run application in the projects bin directory.
CMD [ "/app/bin/f5-ipam-controller" ]
